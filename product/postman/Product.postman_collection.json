{
	"info": {
		"_postman_id": "d2a1b9b3-3a65-4c0b-bde7-fc1cbe742610",
		"name": "Product",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10921846"
	},
	"item": [
		{
			"name": "products",
			"item": [
				{
					"name": "createProduct",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{\bcontentType}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productId\": 1,\n    \"name\": \"카이엔\",\n    \"description\": \"주절주절\",\n    \"inventory\": 10,\n    \"price\": 500000000,\n    \"supplier\": \"포르쉐\",\n    \"size\": {\n        \"width\": 100,\n        \"height\": 200,\n        \"depth\": 300,\n    },\n    \"location\": \"선릉 전시장\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "getProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/{{productId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						},
						"description": "List Albums"
					},
					"response": []
				},
				{
					"name": "updateProduct",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{\bcontentType}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productId\": 1,\n    \"name\": \"카이엔\",\n    \"description\": \"주절주절\",\n    \"inventory\": 10,\n    \"price\": 500000000,\n    \"supplier\": \"포르쉐\",\n    \"size\": {\n        \"width\": 100,\n        \"height\": 200,\n        \"depth\": 300,\n    },\n    \"location\": \"선릉 전시장\"\n}\n"
						},
						"url": {
							"raw": "{{baseUrl}}/api/products/{{productId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "cancelProduct",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/deliveries/{{deliveryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"deliveries",
								"{{deliveryId}}"
							]
						},
						"description": "Create an Album"
					},
					"response": []
				},
				{
					"name": "listProducts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "q",
									"value": null,
									"description": "검색",
									"disabled": true
								},
								{
									"key": "size",
									"value": null,
									"disabled": true
								},
								{
									"key": "page",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "loginWithClientCredential",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const res = pm.response.json();",
							"pm.environment.set('accessToken', res.access_token);",
							"pm.environment.set('refreshToken', res.refresh_token);",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const seed = CryptoJS.enc.Utf8.parse(pm.environment.get(\"clientId\") + \":\" + pm.environment.get(\"clientSecret\"));",
							"const basicAuthString = CryptoJS.enc.Base64.stringify(seed);",
							"pm.environment.set(\"basicAuthString\", basicAuthString);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic  {{basicAuthString}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{authHost}}/oauth/token?grant_type=client_credentials",
					"host": [
						"{{authHost}}"
					],
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "client_credentials"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "health",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Functions",
							"",
							"/**",
							" * Calculate basicAuthString",
							" */",
							"function basicAuthString() {",
							"    let seed = CryptoJS.enc.Utf8.parse(pm.environment.get(\"client_id\") + \":\" + pm.environment.get(\"client_secret\"));",
							"    return CryptoJS.enc.Base64.stringify(seed);",
							"}",
							"",
							"/**",
							" * Generate an UUID v4",
							" * @see https://noritersand.github.io/javascript/2019/04/19/javascript-uuid-%EC%83%9D%EC%84%B1-%ED%95%A8%EC%88%98/",
							" */",
							"function uuidv4() {",
							"  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {",
							"    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);",
							"    return v.toString(16);",
							"  });",
							"}",
							"",
							"/**",
							" * Calculate date value fo today",
							" * @var diff: int days to plus or minus",
							" * @return string e.g. \"2020-01-01\"",
							" */",
							"function today(diff) {",
							"    diff = parseInt(diff);",
							"    loop = Math.abs(diff);",
							"    let now = new Date();",
							"    if (diff !== undefined || diff !== 0) {",
							"        for (i = 0; i < loop; i++) {",
							"            (diff > 0) ",
							"                ? now.setDate(now.getDate() + 1) ",
							"                : now.setDate(now.getDate() - 1);",
							"        }",
							"    }",
							"    return now;",
							"}",
							"",
							"/**",
							" * Generate random string",
							" * ",
							" * @var len: int length of string",
							" */",
							"function randomString(len) {",
							"    return Math.random().toString(36).substring(len);",
							"}",
							"",
							"/**",
							" * Generate random number",
							" * @return int",
							" */",
							"function randomNumber() {",
							"    return parseInt(Math.random() * 100000);",
							"}",
							"",
							"/**",
							" * Calculate random double",
							" * ",
							" * min: int",
							" * max: int",
							" */",
							"function randomInRange(min, max) {",
							"    return Math.random() < 0.5 ",
							"        ? ((1-Math.random()) * (max-min) + min).toFixed(2) ",
							"        : (Math.random() * (max-min) + min).toFixed(2);",
							"}",
							"",
							"/**",
							" * Generate random location",
							" * @return object {",
							" *   @var lat: double ",
							" *   @var lng: double",
							" * }",
							" */",
							"function randomLocation() {",
							"    return {",
							"        lat: (Math.random() * (36.0 - 38.0) + 36.0).toFixed(6),",
							"        lng: (Math.random() * (126.0 - 128.0) + 126.0).toFixed(6)",
							"    };",
							"}",
							"",
							"// Declarations",
							"",
							"const address = {",
							"    postalCode: \"06193\",",
							"    baseAddress: \"서울 강남구 테헤란로 418\",",
							"    detailedAddress: \"13층\",",
							"    roadAddress: null,",
							"    jibunAddress: null,",
							"    lat: \"37.50510340\",",
							"    lng: \"127.05224580\"",
							"};",
							"",
							"pm.environment.set('address', JSON.stringify(address));",
							"pm.environment.set('randomDouble', randomInRange(1, 10));",
							"pm.environment.set(\"basicAuthString\", basicAuthString());",
							"pm.environment.set(\"uuid\", uuidv4());",
							"pm.environment.set('now', new Date().toISOString());",
							"pm.environment.set('today', today().toISOString().slice(0,10));",
							"pm.environment.set('yesterday', today(-1).toISOString().slice(0,10));",
							"pm.environment.set('dayBeforeYesterday', today(-2).toISOString().slice(0,10));",
							"pm.environment.set('randomString', randomString(7));",
							"pm.environment.set('randomDeviceId', randomString(16));",
							"pm.environment.set('randomFcmRegistrationId', randomString(16).toString(36).repeat(5));",
							"pm.environment.set('randomNumber', randomNumber());",
							"pm.environment.set('randomLat', randomLocation().lat);",
							"pm.environment.set('randomLng', randomLocation().lng);",
							"pm.environment.set('baseAddress', address.baseAddress);",
							"pm.environment.set('detailedAddress', address.detailedAddress);",
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/management/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"management",
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/management/info",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"management",
						"info"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}